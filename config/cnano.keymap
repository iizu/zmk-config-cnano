#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt { tapping-term-ms = <400>; };

/ {
    chosen { zmk,battery = &vbatt; };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "VBATT";
    };

    behaviors {
        lhht: left-hand-hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            hold-trigger-key-positions = <6 7 8 9 19 18 33 34 35 39 40 41 5 15 25 26 16 17 27 28 29>;
        };

        rhht: rhht {
            compatible = "zmk,behavior-hold-tap";
            label = "RHHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            global-quick-tap;
            hold-trigger-key-positions = <4 3 2 1 13 14 0 12 24 38 37 36 10 11 20 21 22 23 30 31 32>;
        };

        kc_del: kc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "KC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        Scroll_RepeatLast: Scroll_RepeatLast {
            compatible = "zmk,behavior-hold-tap";
            label = "SCROLL_REPEATLAST";
            bindings = <&mo>, <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };

        mo_mkp: mo_mkp {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_MKP";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };
    };

    combos {
        compatible = "zmk,combos";

        L_alt_thumb {
            bindings = <&kp LEFT_ALT>;
            key-positions = <36 37>;
            layers = <0>;
        };

        L_ctrl_thumb {
            bindings = <&kp LCTRL>;
            key-positions = <37 38>;
            layers = <0>;
        };

        L_GUI_thumb-index {
            bindings = <&kp LEFT_GUI>;
            key-positions = <29 36>;
            layers = <0>;
        };

        R_MB1 {
            bindings = <&mkp MB1>;
            key-positions = <39 40>;
        };

        R_MB2 {
            bindings = <&mkp MB2>;
            key-positions = <40 41>;
        };

        R_MB3 {
            bindings = <&mkp MB3>;
            key-positions = <41 39>;
        };

        gui_esc {
            bindings = <&kp LEFT_GUI>;
            key-positions = <0 1>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&gresc     &kp Q  &kp W  &kp E          &kp R      &kp T            &kp Y          &kp U    &kp I          &kp O    &kp P     &kp MINUS
&kp TAB    &kp A  &kp S  &kp D          &kp F      &kp G            &kp H          &kp J    &kp K          &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C          &kp V      &kp B            &kp N          &kp M    &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &mo_mkp 2 MB2  &kp SPACE  &mo_mkp 1 MB1    &mo_mkp 2 MB1  &kc_del  &mo_mkp 5 MB2
            >;
        };

        Lower {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7      &kp N8  &kp N9     &kp N0   &kp EQUAL
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &kp SQT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans      &trans  &trans     &trans   &trans
                        &trans  &trans  &trans    &trans    &kp DELETE  &trans
            >;
        };

        Raise {
            bindings = <
&trans  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(PLUS)
&trans  &trans        &trans      &trans         &trans        &kp HOME         &kp PAGE_UP    &trans        &trans        &trans        &trans        &trans
&trans  &kp LC(Z)     &kp LC(X)   &kp LC(C)      &kp LC(V)     &kp END          &kp PAGE_DOWN  &trans        &trans        &trans        &trans        &trans
                                  &kp LALT       &kp LSHFT     &kp LCTRL        &trans         &trans        &trans
            >;
        };

        FN {
            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4        &kp F5        &kp F6      &kp F7        &kp F8  &kp F9  &kp F10    &kp F11
&trans   &trans  &trans  &trans  &kp LS(LPAR)  &kp LS(LT)    &kp LS(GT)  &kp LS(RPAR)  &trans  &trans  &trans     &kp F12
&trans   &trans  &trans  &trans  &kp LS(LBRC)  &kp LBKT      &kp RBKT    &kp LS(RBRC)  &trans  &trans  &kp PSCRN  &bt BT_NXT
                         &trans  &trans        &trans        &trans      &trans        &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans    &trans    &trans      &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans    &trans      &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans    &trans      &trans    &trans    &trans    &trans  &trans  &trans
                        &mkp MB3  &mkp MB2  &mkp MB1    &mkp MB1  &mkp MB2  &mkp MB3
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Gaming {
            bindings = <
&kp N3  &kp ESC    &kp Q  &kp W   &kp E   &kp R     &trans  &trans  &trans  &trans  &trans  &trans
&kp N2  &kp TAB    &kp A  &kp S   &kp D   &kp F     &trans  &trans  &trans  &trans  &trans  &trans
&kp N1  &kp LSHFT  &kp Z  &kp X   &kp C   &kp V     &trans  &trans  &trans  &trans  &trans  &trans
                          &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
