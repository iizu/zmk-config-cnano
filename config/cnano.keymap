#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <400>;
};

/ {
    chosen {
        zmk,battery = &vbatt;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "VBATT";
    };

    behaviors {
        lhht: left-hand-hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOLD_TAP";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            hold-trigger-key-positions = <6 7 8 9 19 18 33 34 35 39 40 41 5 15 25 26 16 17 27 28 29>;
        };
        rhht: rhht {
            compatible = "zmk,behavior-hold-tap";
            label = "RHHT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            global-quick-tap;
            hold-trigger-key-positions = <4 3 2 1 13 14 0 12 24 38 37 36 10 11 20 21 22 23 30 31 32>;
        };
    };

    combos {
        compatible = "zmk,combos";

        lang_switch {
            bindings = <&kp LC(SPACE)>;
            key-positions = <10 20>;
        };

        kp_bslh {
            bindings = <&kp BACKSLASH>;
            key-positions = <0 10>;
        };

        kp_lbkt {
            bindings = <&kp LBKT>;
            key-positions = <9 19>;
        };

        kp_apos {
            bindings = <&kp APOS>;
            key-positions = <29 19>;
        };

        kp_rbkt {
            bindings = <&kp RBKT>;
            key-positions = <8 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&gresc     &kp Q  &kp W  &kp E  &kp R      &kp T    &kp Y  &kp U   &kp I            &kp O    &kp P     &kp MINUS
&kp TAB    &kp A  &kp S  &kp D  &kp F      &kp G    &kp H  &kp J   &kp K            &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V      &kp B    &kp N  &kp M   &kp COMMA        &kp DOT  &kp FSLH  &kp RSHIFT
                         &mo 3  &kp SPACE  &mo 1    &mo 2  &bsdel  &kp RIGHT_SHIFT
            >;
            trackball-bindings = <&tmv_coarse>;
        };

        Media {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&gresc     &kp Q  &kp W  &kp E  &kp R      &kp T    &kp Y  &kp U   &kp I            &kp O    &kp P     &kp MINUS
&kp TAB    &kp A  &kp S  &kp D  &kp F      &kp G    &kp H  &kp J   &kp K            &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V      &kp B    &kp N  &kp M   &kp COMMA        &kp DOT  &kp FSLH  &kp RSHIFT
                         &mo 3  &kp SPACE  &mo 1    &mo 2  &bsdel  &kp RIGHT_SHIFT
            >;
        };

        Sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&gresc     &kp Q  &kp W  &kp E  &kp R      &kp T    &kp Y  &kp U   &kp I            &kp O    &kp P     &kp MINUS
&kp TAB    &kp A  &kp S  &kp D  &kp F      &kp G    &kp H  &kp J   &kp K            &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V      &kp B    &kp N  &kp M   &kp COMMA        &kp DOT  &kp FSLH  &kp RSHIFT
                         &mo 3  &kp SPACE  &mo 1    &mo 2  &bsdel  &kp RIGHT_SHIFT
            >;
        };

        Num {
            bindings = <
&gresc     &kp Q  &kp W  &kp E  &kp R      &kp T    &kp Y  &kp U   &kp I            &kp O    &kp P     &kp MINUS
&kp TAB    &kp A  &kp S  &kp D  &kp F      &kp G    &kp H  &kp J   &kp K            &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V      &kp B    &kp N  &kp M   &kp COMMA        &kp DOT  &kp FSLH  &kp RSHIFT
                         &mo 3  &kp SPACE  &mo 1    &mo 2  &bsdel  &kp RIGHT_SHIFT
            >;
        };

        Nav {
            bindings = <
&gresc     &kp Q  &kp W  &kp E  &kp R      &kp T    &kp Y  &kp U   &kp I            &kp O    &kp P     &kp MINUS
&kp TAB    &kp A  &kp S  &kp D  &kp F      &kp G    &kp H  &kp J   &kp K            &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V      &kp B    &kp N  &kp M   &kp COMMA        &kp DOT  &kp FSLH  &kp RSHIFT
                         &mo 3  &kp SPACE  &mo 1    &mo 2  &bsdel  &kp RIGHT_SHIFT
            >;
        };

        Fun {
            bindings = <
&gresc     &kp Q  &kp W  &kp E  &kp R      &kp T    &kp Y  &kp U   &kp I            &kp O    &kp P     &kp MINUS
&kp TAB    &kp A  &kp S  &kp D  &kp F      &kp G    &kp H  &kp J   &kp K            &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V      &kp B    &kp N  &kp M   &kp COMMA        &kp DOT  &kp FSLH  &kp RSHIFT
                         &mo 3  &kp SPACE  &mo 1    &mo 2  &bsdel  &kp RIGHT_SHIFT
            >;
        };

        Mouse {
            bindings = <
&gresc     &kp Q  &kp W  &kp E  &kp R      &kp T    &kp Y  &kp U   &kp I            &kp O    &kp P     &kp MINUS
&kp TAB    &kp A  &kp S  &kp D  &kp F      &kp G    &kp H  &kp J   &kp K            &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V      &kp B    &kp N  &kp M   &kp COMMA        &kp DOT  &kp FSLH  &kp RSHIFT
                         &mo 3  &kp SPACE  &mo 1    &mo 2  &bsdel  &kp RIGHT_SHIFT
            >;
        };
    };
};
